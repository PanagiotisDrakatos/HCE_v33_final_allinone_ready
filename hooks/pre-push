#!/usr/bin/env bash
# pre-push: Block pushes unless quality gates pass.
# Runs ruff and pytest. Exits non‑zero on failure.
# Set FAST=1 to run a lighter test selection.
set -euo pipefail

ROOT="$(git rev-parse --show-toplevel)"
cd "$ROOT"

# Optionally skip gates if last commit message contains [skip ci]
last_msg="$(git log -1 --pretty=%B || true)"
if [[ "$last_msg" == *"[skip ci]"* ]]; then
  echo "[pre-push] Skipping gates due to [skip ci] in last commit message."
  exit 0
fi

# Activate virtualenv if present (Windows Git Bash or Unix)
if [[ -f ".venv/Scripts/activate" ]]; then
  # Windows layout
  source ".venv/Scripts/activate"
elif [[ -f ".venv/bin/activate" ]]; then
  # Unix/macOS layout
  source ".venv/bin/activate"
fi

echo "[pre-push] Running quality gates…"

# Ensure required tools exist; if not, provide a helpful message.
need_cmd() {
  if ! command -v "$1" >/dev/null 2>&1; then
    echo "[pre-push] Missing tool: $1. Install it in your venv or PATH." >&2
    exit 1
  fi
}
need_cmd git

# Ruff checks
if command -v ruff >/dev/null 2>&1; then
  echo "[pre-push] ruff check ."
  ruff check .
else
  echo "[pre-push] ruff not found — failing push. See the project README for setup instructions."
  exit 1
fi

# Tests
if command -v pytest >/dev/null 2>&1; then
  if [[ "${FAST:-0}" == "1" ]]; then
    echo "[pre-push] pytest -q -m 'not slow and not e2e'"
    pytest -q -m "not slow and not e2e"
  else
    echo "[pre-push] pytest -q"
    pytest -q
  fi
else
  echo "[pre-push] pytest not found — failing push."
  exit 1
fi

echo "[pre-push] All checks passed ✅ Proceeding with push."
exit 0
