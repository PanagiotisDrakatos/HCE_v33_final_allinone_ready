name: HCE Python CI (ruff only) [disabled]

on:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    if: ${{ false }} # disabled in favor of PR Lite
    name: ruff-lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', 'pyproject.toml', 'setup.cfg') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Ruff
        shell: bash
        run: |
          python -m pip install -U pip wheel
          pip install ruff

      - name: Lint (ruff)
        run: ruff check .

      # Collect logs always for PR comment on failure
      - name: Collect key logs (always)
        if: ${{ always() }}
        shell: bash
        run: |
          mkdir -p ci_logs
          echo "==== ruff ===="    >  ci_logs/ruff.txt;   (ruff check . || true)    2>&1 | tee -a ci_logs/ruff.txt

      - name: Upload artifacts (logs)
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs
          path: |
            ci_logs/
          if-no-files-found: ignore

  post_fail_comment:
    needs: [test]
    if: ${{ failure() && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download logs artifact
        uses: actions/download-artifact@v5
        with:
          name: ci-logs
          path: ci_logs

      - name: Comment failure summary to PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            function tail4k(p) {
              try { return fs.readFileSync(p, 'utf8').slice(-4000); }
              catch { return '(not found)'; }
            }

            const ruff = tail4k('ci_logs/ruff.txt');

            const body = [
              '### ❌ CI failed — Ruff excerpts',
              '```txt\n[ruff]\n' + ruff + '\n```',
              `Run logs: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
            ].join('\n\n');

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });
