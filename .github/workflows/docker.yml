name: Docker Build & Push

on:
  push:
    branches: [ "main", "master" ]
    tags: [ "v*", "release-*" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  docker:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Check if Dockerfile exists
        id: has_dockerfile
        shell: bash
        run: |
          if [ -f Dockerfile ]; then echo "exists=true" >> $GITHUB_OUTPUT; else echo "exists=false" >> $GITHUB_OUTPUT; fi

      - name: Login to GHCR
        if: steps.has_dockerfile.outputs.exists == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        if: steps.has_dockerfile.outputs.exists == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha

      - name: Set up Buildx
        if: steps.has_dockerfile.outputs.exists == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Build & Push
        if: steps.has_dockerfile.outputs.exists == 'true'
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: ./Dockerfile

      - name: Skip note
        if: steps.has_dockerfile.outputs.exists != 'true'
        run: echo "No Dockerfile found. Skipping Docker build/push."

