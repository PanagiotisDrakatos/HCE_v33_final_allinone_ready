name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

permissions:
  contents: read

jobs:
  node-ci:
    name: Node CI (Jest/Lint/Build)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Test (Jest)
        run: npm test -- --coverage

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-coverage
          path: coverage

  python-ci:
    name: Python CI (Pytest/Lint)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint (flake8)
        run: flake8 src tests hcebt

      - name: Format check (black)
        run: black --check src tests hcebt

      - name: Test (pytest)
        run: pytest --cov=src --cov=hcebt --cov-report=xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-coverage
          path: coverage.xml

  all-green:
    needs: [node-ci, python-ci]
    runs-on: ubuntu-latest
    steps:
      - run: echo "All checks passed ðŸŽ‰"
