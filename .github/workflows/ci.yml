name: CI

on:
  pull_request:
    branches: ["**"]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  PYTHON_VERSION: "3.11"
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  PYTHONUNBUFFERED: 1
  # For GitHub runs: Settings → Variables → RUN_BACKTESTS="1" to enable
  RUN_BACKTESTS: ${{ vars.RUN_BACKTESTS || '0' }}

jobs:
  # ───────────────────────── Ruff Lint ─────────────────────────
  lint:
    name: Ruff Lint & Format (check)
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Ensure Node (act only)
        if: ${{ env.ACT == 'true' }}
        run: |
          apt-get update
          apt-get install -y nodejs npm
          node -v && npm -v

      - uses: actions/checkout@v4

      - name: System Python info
        run: |
          set -euxo pipefail
          python3 -V
          which python3

      - name: Cache Ruff
        if: ${{ !env.ACT }}
        uses: actions/cache@v4
        with:
          path: .ruff_cache
          key: ${{ runner.os }}-ruff-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-ruff-

      # ✅ Install Ruff in a venv (PEP 668 compliant)
      - name: Install Ruff (venv)
        run: |
          set -euxo pipefail
          python3 -m venv .venv
          .venv/bin/pip install -U pip setuptools wheel
          .venv/bin/pip install "ruff>=0.4.10"
          echo "$PWD/.venv/bin" >> "$GITHUB_PATH"

      - name: Ruff check
        run: |
          set -euxo pipefail
          mkdir -p ci_logs
          (ruff check --output-format=github --force-exclude . 2>&1 | tee ci_logs/ruff-check.txt)

      - name: Ruff format (check only)
        run: |
          set -euxo pipefail
          (ruff format --check . 2>&1 | tee ci_logs/ruff-format-check.txt)

      - name: Upload lint logs
        if: always() && !env.ACT
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs-lint
          path: ci_logs/

  # ───────────────────────── Unit Tests ─────────────────────────
  tests:
    name: Unit Tests
    runs-on: ubuntu-24.04
    needs: [lint]
    timeout-minutes: 25
    steps:
      - name: Ensure Node (act only)
        if: ${{ env.ACT == 'true' }}
        run: |
          apt-get update
          apt-get install -y nodejs npm
          node -v && npm -v

      - uses: actions/checkout@v4

      # Replace setup-python with verifying the system Python
      - name: System Python info
        run: |
          set -euxo pipefail
          python3 -V
          which python3

      - name: Fix SSL in system Python
        run: |
          set -euxo pipefail
          apt-get update
          apt-get install -y --no-install-recommends libssl3 ca-certificates
          update-ca-certificates || true
          python3 - <<'PY'
          import ssl
          print("✅  System OpenSSL:", ssl.OPENSSL_VERSION)
          PY

      - name: Install deps (venv)
        run: |
          set -euxo pipefail
          python3 -m venv .venv
          .venv/bin/pip install -U pip setuptools wheel
          if [ -f requirements.txt ]; then .venv/bin/pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then .venv/bin/pip install -r requirements-dev.txt; fi
          if [ -f pyproject.toml ]; then .venv/bin/pip install -e .; fi
          .venv/bin/pip install pytest pytest-cov

      - name: Run pytest (with coverage)
        run: |
          set -euxo pipefail
          mkdir -p ci_logs
          (.venv/bin/pytest -q --cov=. --cov-report=xml --cov-report=term 2>&1 | tee ci_logs/pytest.txt)

      - name: Upload test outputs
        if: always() && !env.ACT
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs-tests
          path: |
            ci_logs/
            coverage.xml

  # ───────────────────────── PR Guard ─────────────────────────
  pr-guard:
    name: PR Guard (merge/conflicts/policy)
    runs-on: ubuntu-24.04
    needs: [lint]
    timeout-minutes: 8
    steps:
      - name: Ensure Node (act only)
        if: ${{ env.ACT == 'true' }}
        run: |
          apt-get update
          apt-get install -y nodejs npm
          node -v && npm -v

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure PR merges cleanly into base
        run: |
          set -euxo pipefail
          mkdir -p ci_logs
          echo "Base: $GITHUB_BASE_REF  Head: $GITHUB_HEAD_REF" | tee ci_logs/pr-guard.merge.txt
          git fetch origin "$GITHUB_BASE_REF" "$GITHUB_HEAD_REF"
          git checkout -b pr-merge-test "origin/$GITHUB_BASE_REF"
          if ! git merge --no-commit --no-ff "origin/$GITHUB_HEAD_REF"; then
            echo "::error::PR cannot be merged cleanly into ${GITHUB_BASE_REF}. Please rebase." | tee -a ci_logs/pr-guard.merge.txt
            exit 1
          fi
          echo "✅ Clean merge test passed." | tee -a ci_logs/pr-guard.merge.txt

      - name: Check branch is not behind base
        run: |
          set -euxo pipefail
          mkdir -p ci_logs
          git fetch origin "$GITHUB_BASE_REF"
          BEHIND=$(git rev-list --count HEAD.."origin/$GITHUB_BASE_REF")
          if [ "$BEHIND" -gt 0 ]; then
            echo "::error::Branch is $BEHIND commits behind ${GITHUB_BASE_REF}. Please rebase/merge." | tee ci_logs/pr-guard.behind.txt
            exit 1
          fi
          echo "✅ Branch is up to date with base." | tee ci_logs/pr-guard.behind.txt

      - name: Disallow merge commits in PR history
        run: |
          set -euxo pipefail
          mkdir -p ci_logs
          git fetch origin "$GITHUB_BASE_REF"
          MERGES=$(git rev-list --merges --count "origin/$GITHUB_BASE_REF"..HEAD)
          if [ "$MERGES" -gt 0 ]; then
            echo "::error::PR contains merge commits. Please rebase on ${GITHUB_BASE_REF}." | tee ci_logs/pr-guard.merges.txt
            exit 1
          fi
          echo "✅ No merge commits in PR history." | tee ci_logs/pr-guard.merges.txt

      - name: Forbid Windows-only files & non-Ruff linters
        run: |
          set -euxo pipefail
          mkdir -p ci_logs
          if git ls-files -z | grep -E -z '\.(cmd|bat|ps1)$'; then
            echo "::error::Windows-only scripts (*.cmd|*.bat|*.ps1) are not allowed." | tee ci_logs/pr-guard.policy.txt
            exit 1
          fi
          if git grep -nE '\b(black|flake8|pylint|isort)\b' -- . ':!*.md' ':!CHANGELOG*' ':!.github/workflows/codeql.yml' ; then
            echo "::error::Found disallowed linters/configs (black/flake8/pylint/isort). Use Ruff only." | tee -a ci_logs/pr-guard.policy.txt
            exit 1
          fi
          echo "✅ Policy checks passed." | tee -a ci_logs/pr-guard.policy.txt

      - name: Enforce Conventional PR title
        run: |
          set -euxo pipefail
          title="${{ github.event.pull_request.title }}"
          if [[ ! "$title" =~ ^(feat|fix|chore|refactor|docs|test|perf)(\(.+\))?:\ .{1,}$ ]]; then
            echo "::error::PR title must follow Conventional Commits (e.g., 'feat: ...', 'fix(parser): ...')." | tee ci_logs/pr-guard.title.txt
            exit 1
          fi
          echo "✅ PR title OK." | tee ci_logs/pr-guard.title.txt

      - name: Upload PR-Guard logs
        if: always() && !env.ACT
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs-pr-guard
          path: ci_logs/

  # ───────────────────────── Backtests (optional) ─────────────────────────
  backtests:
    name: Backtests (optional)
    runs-on: ubuntu-24.04
    needs: [tests]
    timeout-minutes: 60
    steps:
      - name: Ensure Node (act only)
        if: ${{ env.ACT == 'true' }}
        run: |
          apt-get update
          apt-get install -y nodejs npm
          node -v && npm -v

      - uses: actions/checkout@v4

      # Replace setup-python with verifying the system Python
      - name: System Python info
        run: |
          set -euxo pipefail
          python3 -V
          which python3

      - name: Fix SSL in system Python
        run: |
          set -euxo pipefail
          apt-get update
          apt-get install -y --no-install-recommends libssl3 ca-certificates
          update-ca-certificates || true
          python3 - <<'PY'
          import ssl
          print("✅  System OpenSSL:", ssl.OPENSSL_VERSION)
          PY

      - name: Install deps (venv)
        run: |
          set -euxo pipefail
          python3 -m venv .venv
          .venv/bin/pip install -U pip setuptools wheel
          if [ -f requirements.txt ]; then .venv/bin/pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then .venv/bin/pip install -r requirements-dev.txt; fi
          if [ -f pyproject.toml ]; then .venv/bin/pip install -e .; fi
          .venv/bin/pip install pytest pytest-cov

      # For backtests, install additional dependencies
      - name: Install backtest dependencies
        run: |
          set -euxo pipefail
          if [ -f requirements-backtest.txt ]; then .venv/bin/pip install -r requirements-backtest.txt; fi

      # Only run backtests if enabled
      - name: Run backtests
        if: ${{ env.RUN_BACKTESTS == '1' }}
        run: |
          set -euxo pipefail
          mkdir -p ci_logs/backtests
          (.venv/bin/python -m backtest_runner -q --output-dir ci_logs/backtests 2>&1 | tee ci_logs/backtests/backtest_results.txt)

      - name: Upload backtest outputs
        if: always() && !env.ACT
        uses: actions/upload-artifact@v4
        with:
          name: ci-logs-backtests
          path: ci_logs/backtests/
