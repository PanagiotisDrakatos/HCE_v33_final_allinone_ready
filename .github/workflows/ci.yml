name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

permissions:
  contents: read

jobs:
  node-ci:
    name: Node CI (Jest/Lint/Build)
    runs-on: ubuntu-latest
    if: ${{ hashFiles('package.json') != '' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Lint
        run: npm run lint --if-present

      - name: Build
        run: npm run build --if-present

      - name: Test (Jest)
        run: npm test -- --coverage --ci --runInBand

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-coverage
          path: coverage

  python-ci:
    name: Python CI (Pytest/Lint/Coverage)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov ruff black pip-audit

      - name: Lint (ruff)
        run: ruff check .

      - name: Format check (black)
        run: black --check .

      - name: Unit tests + coverage
        run: pytest -q --cov=hcebt --cov-report=xml --cov-report=term-missing --maxfail=1

      - name: Enforce coverage gate (>=80%)
        run: |
          python - << 'PY'
          import sys, xml.etree.ElementTree as ET
          root = ET.parse('coverage.xml').getroot()
          rate = float(root.attrib.get('line-rate', '0'))
          pct = 100.0 * rate
          print(f"Coverage: {pct:.2f}%")
          sys.exit(0 if pct >= 80.0 else 1)
          PY

      - name: Security audit (pip-audit) â€“ non-blocking
        continue-on-error: true
        run: pip-audit -r requirements.txt

      - name: Secret scan (TruffleHog) â€“ non-blocking
        continue-on-error: true
        uses: trufflesecurity/trufflehog@v3.78.0
        with:
          path: ./
          entropy: true
          branches: ""

      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: python-coverage
          path: coverage.xml

  all-green:
    name: All checks passed
    needs: [ node-ci, python-ci ]
    runs-on: ubuntu-latest
    steps:
      - run: echo "All checks passed ðŸŽ‰"
